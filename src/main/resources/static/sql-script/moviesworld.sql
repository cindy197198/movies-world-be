-- MySQL Script generated by MySQL Workbench
-- Sun 29 Mar 2020 04:13:17 PM +07
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema movies_world
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema movies_world
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `movies_world` ;
USE `movies_world` ;

SET FOREIGN_KEY_CHECKS=0;

-- -----------------------------------------------------
-- Table `movies_world`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movies_world`.`users`;
CREATE TABLE IF NOT EXISTS `movies_world`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(50) NOT NULL,
  `password` VARCHAR(68) NOT NULL,
  `full_name` NVARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `address` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `movies_world`.`authorities`
-- -----------------------------------------------------
DROP TABLE IF  EXISTS `movies_world`.`authorities` ;

CREATE TABLE IF NOT EXISTS `movies_world`.`authorities` (
  `id` INT NOT NULL,
  `authority` VARCHAR(50) NOT NULL,
  `id_user` INT NULL,
  PRIMARY KEY (`id`),
--  INDEX `fk_authorities_users_idx` (`id_user` ASC) VISIBLE,
  CONSTRAINT `fk_authorities_users`
    FOREIGN KEY (`id_user`)
    REFERENCES `movies_world`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `movies_world`.`description`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movies_world`.`description`;

CREATE TABLE IF NOT EXISTS `movies_world`.`description` (
  `id` INT NOT NULL,
  `time_limit` VARCHAR(45) NULL,
  `premiere` DATE NULL,
  `artist` NVARCHAR(100) NULL,
  `director` NVARCHAR(100) NULL,
  `content` NVARCHAR(100) NULL,
  `Nation` NVARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`film`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movies_world`.`film`;

CREATE TABLE IF NOT EXISTS `movies_world`.`film` (
  `id` INT NOT NULL,
  `name` NVARCHAR(100) NULL,
  `trailer` VARCHAR(100) NULL,
  `id_desc` INT NULL,
  PRIMARY KEY (`id`),
--  INDEX `fk_film_description_id_idx` (`id_desc` ASC) VISIBLE,
  CONSTRAINT `fk_film_description_id`
    FOREIGN KEY (`id_desc`)
    REFERENCES `movies_world`.`description` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`genre`
-- -----------------------------------------------------
 DROP TABLE IF  EXISTS `movies_world`.`genre`;

CREATE TABLE IF NOT EXISTS `movies_world`.`genre` (
  `id` INT NOT NULL,
  `name` NVARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`film_genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movies_world`.`film_genre`;

CREATE TABLE IF NOT EXISTS `movies_world`.`film_genre` (
  `id_film` INT NOT NULL,
  `id_genre` INT NOT NULL,
  primary key(`id_film`,`id_genre`),
--  INDEX `fk_film_genre_film_idx` (`id_film` ASC) VISIBLE,
--  INDEX `fk_film_genre_genre_idx` (`id_genre` ASC) VISIBLE,
  CONSTRAINT `fk_film_genre_film`
    FOREIGN KEY (`id_film`)
    REFERENCES `movies_world`.`film` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_film_genre_genre`
    FOREIGN KEY (`id_genre`)
    REFERENCES `movies_world`.`genre` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movies_world`.`room`;

CREATE TABLE IF NOT EXISTS `movies_world`.`room` (
  `id` INT NOT NULL,
  `name` NVARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`show_time_film`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `movies_world`.`show_time_film`;

CREATE TABLE IF NOT EXISTS `movies_world`.`show_time_film` (
  `id` INT NOT NULL,
  `time` VARCHAR(45) NULL,
  `date` DATE NULL,
  `id_film` INT NULL,
  `id_room` INT NULL,
  PRIMARY KEY (`id`),
--  INDEX `fk_show_time_film_room_id_idx` (`id_room` ASC) VISIBLE,
--  INDEX `fk_show_time_film_film_id_idx` (`id_film` ASC) VISIBLE,
  CONSTRAINT `fk_show_time_film_film_id`
    FOREIGN KEY (`id_film`)
    REFERENCES `movies_world`.`film` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_show_time_film_room_id`
    FOREIGN KEY (`id_room`)
    REFERENCES `movies_world`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`seat`
-- -----------------------------------------------------
DROP TABLE IF  EXISTS `movies_world`.`seat`;

CREATE TABLE IF NOT EXISTS `movies_world`.`seat` (
  `id` INT NOT NULL,
  `id_show_time_film` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `status` TINYINT(1) NULL,
  primary key (`id`,`id_show_time_film`),
--  INDEX `fk_seat_show_time_film_id_idx` (`id_show_time_film` ASC) VISIBLE,
  CONSTRAINT `fk_seat_show_time_film_id`
    FOREIGN KEY (`id_show_time_film`)
    REFERENCES `movies_world`.`show_time_film` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`reservation`
-- -----------------------------------------------------
DROP TABLE IF  EXISTS `movies_world`.`reservation`;

CREATE TABLE IF NOT EXISTS `movies_world`.`reservation` (
  `id_seat` INT NOT NULL,
  `time` TIME NULL,
  `status` TINYINT(1) NULL,
  `id_user` INT NULL,
  PRIMARY KEY (`id_seat`),
--  INDEX `fk_reservation_users_id_idx` (`id_user` ASC) VISIBLE,
  CONSTRAINT `fk_reservation_users_id`
    FOREIGN KEY (`id_user`)
    REFERENCES `movies_world`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_world`.`comment`
-- -----------------------------------------------------
DROP TABLE IF  EXISTS `movies_world`.`comment`;

CREATE TABLE IF NOT EXISTS `movies_world`.`comment` (
  `id` INT NOT NULL,
  `time_create` DATETIME(6) NULL,
  `id_user` INT NULL,
  `id_film` INT NULL,
  PRIMARY KEY (`id`),
--  INDEX `fk_comment_film_id_idx` (`id_film` ASC) VISIBLE,
--  INDEX `fk_comment_users_id_idx` (`id_user` ASC) VISIBLE,
  CONSTRAINT `fk_comment_users_id`
    FOREIGN KEY (`id_user`)
    REFERENCES `movies_world`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_film_id`
    FOREIGN KEY (`id_film`)
    REFERENCES `movies_world`.`film` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `movies_world`.`rating`
-- -----------------------------------------------------
DROP TABLE IF  EXISTS `movies_world`.`rating`;

CREATE TABLE IF NOT EXISTS `movies_world`.`rating` (
  `id_film` INT NOT NULL,
  `id_user` INT NOT NULL,
  `rating` DOUBLE NULL,
  primary key (`id_film`,`id_user`),
--  INDEX `fk_rating_users_idx` (`id_user` ASC) VISIBLE,
 -- INDEX `fk_rating_film_idx` (`id_film` ASC) VISIBLE,
  CONSTRAINT `fk_rating_users`
    FOREIGN KEY (`id_user`)
    REFERENCES `movies_world`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rating_film`
    FOREIGN KEY (`id_film`)
    REFERENCES `movies_world`.`film` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



SET FOREIGN_KEY_CHECKS=1;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;